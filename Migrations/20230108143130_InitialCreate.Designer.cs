// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmacyDB.EF;

#nullable disable

namespace PharmacyDB.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230108143130_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PharmacyDB.Models.Client", b =>
                {
                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Full Name");

                    b.HasKey("Phone")
                        .HasName("PK_ClientPhone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Phone = 682214212,
                            FullName = "Ivan Ivanov"
                        },
                        new
                        {
                            Phone = 672463891,
                            FullName = "Vasily Vasilyev"
                        },
                        new
                        {
                            Phone = 982154521,
                            FullName = "Kondraty Kondratiev"
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Full Name");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "nafanya.k@gmail.com",
                            FullName = "Nafanail Karov",
                            Phone = 980098980,
                            Position = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Email = "karpova.ribba@gmail.com",
                            FullName = "Kseniya Karpova",
                            Phone = 982158289,
                            Position = "Cashier"
                        },
                        new
                        {
                            Id = 3,
                            Email = "baba.valya@gmail.com",
                            FullName = "Valentina Starodubceva",
                            Phone = 678921952,
                            Position = "Director"
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SellBy")
                        .HasColumnType("datetime2")
                        .HasColumnName("Sell By");

                    b.HasKey("Id")
                        .HasName("PK_MedicineId");

                    b.ToTable("Medicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Paracetamol",
                            Price = 250.50m,
                            SellBy = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Antigrippin",
                            Price = 699.99m,
                            SellBy = new DateTime(2023, 5, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Papazin",
                            Price = 360.00m,
                            SellBy = new DateTime(2023, 7, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.MedicineInOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "MedicineId");

                    b.HasIndex("MedicineId")
                        .IsUnique();

                    b.ToTable("MedicinesInOrders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            MedicineId = 1,
                            Price = 7525.00m,
                            Quantity = 50
                        },
                        new
                        {
                            OrderId = 1,
                            MedicineId = 2,
                            Price = 16499.70m,
                            Quantity = 30
                        },
                        new
                        {
                            OrderId = 2,
                            MedicineId = 3,
                            Price = 13950.00m,
                            Quantity = 45
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.MedicineInReceipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ReceiptId", "MedicineId");

                    b.HasIndex("MedicineId");

                    b.ToTable("MedicinesInReceipts");

                    b.HasData(
                        new
                        {
                            ReceiptId = 1,
                            MedicineId = 1,
                            Price = 501.00m,
                            Quantity = 2
                        },
                        new
                        {
                            ReceiptId = 2,
                            MedicineId = 2,
                            Price = 699.99m,
                            Quantity = 1
                        },
                        new
                        {
                            ReceiptId = 1,
                            MedicineId = 3,
                            Price = 720.00m,
                            Quantity = 2
                        },
                        new
                        {
                            ReceiptId = 3,
                            MedicineId = 3,
                            Price = 360.00m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.MedicineInWarehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("WarehouseId", "MedicineId");

                    b.HasIndex("MedicineId");

                    b.ToTable("MedicinesInWarehouses");

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            MedicineId = 1,
                            Quantity = 40
                        },
                        new
                        {
                            WarehouseId = 2,
                            MedicineId = 1,
                            Quantity = 8
                        },
                        new
                        {
                            WarehouseId = 1,
                            MedicineId = 2,
                            Quantity = 29
                        },
                        new
                        {
                            WarehouseId = 2,
                            MedicineId = 3,
                            Quantity = 42
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_OrderId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManagerId = 1,
                            OrderDate = new DateTime(2022, 12, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 7525.00m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            ManagerId = 1,
                            OrderDate = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 16499.70m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            ManagerId = 1,
                            OrderDate = new DateTime(2022, 12, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 13950.00m,
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.Pharmacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_PharmacyId");

                    b.ToTable("Pharmacies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Pushkina 9",
                            DirectorId = 3,
                            Phone = 12521215
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id")
                        .HasName("PK_ReceiptId");

                    b.ToTable("Receipts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1221.00m
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 1, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 699.99m
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 1, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 360.00m
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.ReceiptAndClient", b =>
                {
                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("ClientPhone")
                        .HasColumnType("int");

                    b.HasKey("ReceiptId", "ClientPhone");

                    b.HasIndex("ClientPhone");

                    b.HasIndex("ReceiptId")
                        .IsUnique();

                    b.ToTable("ReceiptsAndClients");

                    b.HasData(
                        new
                        {
                            ReceiptId = 1,
                            ClientPhone = 682214212
                        },
                        new
                        {
                            ReceiptId = 2,
                            ClientPhone = 672463891
                        },
                        new
                        {
                            ReceiptId = 3,
                            ClientPhone = 682214212
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Bolivia",
                            Name = "Supplier of Medicine OFFICIAL",
                            Phone = 215128991
                        },
                        new
                        {
                            Id = 2,
                            Address = "Moldova",
                            Name = "HorseMedicalSpecial",
                            Phone = 562123251
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_WarehouseId");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Nowhere st. 10",
                            Phone = 67212511
                        },
                        new
                        {
                            Id = 2,
                            Address = "Somewhere st. 24",
                            Phone = 67512215
                        });
                });

            modelBuilder.Entity("PharmacyDB.Models.MedicineInOrder", b =>
                {
                    b.HasOne("PharmacyDB.Models.Medicine", "Medicine")
                        .WithOne("MedicineInOrder")
                        .HasForeignKey("PharmacyDB.Models.MedicineInOrder", "MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmacyDB.Models.Order", "Order")
                        .WithMany("MedicinesInOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PharmacyDB.Models.MedicineInReceipt", b =>
                {
                    b.HasOne("PharmacyDB.Models.Medicine", "Medicine")
                        .WithMany("MedicineInReceipts")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmacyDB.Models.Receipt", "Receipt")
                        .WithMany("MedicinesInReceipt")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("PharmacyDB.Models.MedicineInWarehouse", b =>
                {
                    b.HasOne("PharmacyDB.Models.Medicine", "Medicine")
                        .WithMany("MedicineInWarehouses")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmacyDB.Models.Warehouse", "Warehouse")
                        .WithMany("MedicinesInWarehouse")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("PharmacyDB.Models.Order", b =>
                {
                    b.HasOne("PharmacyDB.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmacyDB.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PharmacyDB.Models.ReceiptAndClient", b =>
                {
                    b.HasOne("PharmacyDB.Models.Client", "Client")
                        .WithMany("ReceiptsAndClient")
                        .HasForeignKey("ClientPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmacyDB.Models.Receipt", "Receipt")
                        .WithOne("ReceiptAndClient")
                        .HasForeignKey("PharmacyDB.Models.ReceiptAndClient", "ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("PharmacyDB.Models.Client", b =>
                {
                    b.Navigation("ReceiptsAndClient");
                });

            modelBuilder.Entity("PharmacyDB.Models.Medicine", b =>
                {
                    b.Navigation("MedicineInOrder")
                        .IsRequired();

                    b.Navigation("MedicineInReceipts");

                    b.Navigation("MedicineInWarehouses");
                });

            modelBuilder.Entity("PharmacyDB.Models.Order", b =>
                {
                    b.Navigation("MedicinesInOrder");
                });

            modelBuilder.Entity("PharmacyDB.Models.Receipt", b =>
                {
                    b.Navigation("MedicinesInReceipt");

                    b.Navigation("ReceiptAndClient")
                        .IsRequired();
                });

            modelBuilder.Entity("PharmacyDB.Models.Warehouse", b =>
                {
                    b.Navigation("MedicinesInWarehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
